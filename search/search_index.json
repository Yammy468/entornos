{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"ENTORNOS DE DESARROLLO. Unidad 1-1 Unidad 1-2 Unidad 1-3 Unidad 2-1 Unidad 2-2","title":"Home"},{"location":"#entornos-de-desarrollo","text":"Unidad 1-1 Unidad 1-2 Unidad 1-3 Unidad 2-1 Unidad 2-2","title":"ENTORNOS DE DESARROLLO."},{"location":"about/","text":"Torneo de Ajedrez Hace unos d\u00edas, los alumnos de los institutos Francisco Romero Vargas y Asta Regia han participado en un torneo de ajedrez organizado por este \u00faltimo Centro. La iniciativa, incluida en el programa educativo AulaDJaque del IES Asta Regia, ha sido un \u00e9xito en participaci\u00f3n del alumnado y de buen hacer del profesorado de ambos Institutos, Ampa e incluso de otros ciclos formativos del Centro. Rafael Cabello Montoro, coordinador de AulaDJaque, ha agradecido el esfuerzo de todos por llevar a cabo un torneo en el que al margen de la competici\u00f3n en s\u00ed, ha sido un \u00e9xito a todos los niveles, fomentando la buena armon\u00eda entre ambos centros educativos. Por nuestra parte, nuestro promotor ha sido Borja Plaza Pazos que lleva realizando esta labor por varios a\u00f1os ya consiguiendo que el ajedrez forme parte de nuestro entorno educativo El ganador fue finalmente el alumno de primero de ESO del IES Asta Regia, Wen Hao. En total, tomaron parte en el torneo un total de 70 alumnos, de ellos 54 pertenecientes al IES Asta Regia y 16 al Francisco Romero Vargas. Las espadas quedan en alto para la competici\u00f3n en nuestro Centro. https://www.diariodejerez.es/jerez/Torneo-ajedrez-IES-Asta-Regia_3_1675662428.html","title":"About"},{"location":"about/#torneo-de-ajedrez","text":"Hace unos d\u00edas, los alumnos de los institutos Francisco Romero Vargas y Asta Regia han participado en un torneo de ajedrez organizado por este \u00faltimo Centro. La iniciativa, incluida en el programa educativo AulaDJaque del IES Asta Regia, ha sido un \u00e9xito en participaci\u00f3n del alumnado y de buen hacer del profesorado de ambos Institutos, Ampa e incluso de otros ciclos formativos del Centro. Rafael Cabello Montoro, coordinador de AulaDJaque, ha agradecido el esfuerzo de todos por llevar a cabo un torneo en el que al margen de la competici\u00f3n en s\u00ed, ha sido un \u00e9xito a todos los niveles, fomentando la buena armon\u00eda entre ambos centros educativos. Por nuestra parte, nuestro promotor ha sido Borja Plaza Pazos que lleva realizando esta labor por varios a\u00f1os ya consiguiendo que el ajedrez forme parte de nuestro entorno educativo El ganador fue finalmente el alumno de primero de ESO del IES Asta Regia, Wen Hao. En total, tomaron parte en el torneo un total de 70 alumnos, de ellos 54 pertenecientes al IES Asta Regia y 16 al Francisco Romero Vargas. Las espadas quedan en alto para la competici\u00f3n en nuestro Centro. https://www.diariodejerez.es/jerez/Torneo-ajedrez-IES-Asta-Regia_3_1675662428.html","title":"Torneo de Ajedrez"},{"location":"Unidad_01/Ejercicio%20_Unidad%20_1/","text":"Ejercios Unidad 1 Ciclo de vida del sofware 1. Define \"Ciclo de vida del sofware\" Es una secuencia estructurada y bien definida de las etapas en ingenier\u00eda de software para desarrollar el software deseado. 2. Nombra las fases principales del desarrollo de software y explica brevemente que se hace en cada una de ellas. AN\u00c1LISIS : determinar y definir las necesidades del cliente y especificar los requisitos que debe cumplir el software a desarrollar. DISE\u00d1O : descomponer y organizar el sistema en elementos por separados, y especificar la relaci\u00f3n y funci\u00f3n de los elementos. CODIFICACI\u00d3N : escribir el c\u00f3digo fuente de cada componente PRUEBAS : someter el programa a diferentes situaciones. MANTENIMIENTO : en casos de realizar cambios se rehace parte del trabajo en los pasos anteriores. 3. Explica brevemente en qu\u00e9 consiste el modelo en cascada cuando hablamos de desarrollo de sofware. Pues a la hora de gesti\u00f3n de proyectos se divide en fases ordenados. Y cada fase comienza reci\u00e9n cuando ha terminado la anterior. Este al ser un modelo antiguo no deja pr\u00e1cticamente ning\u00fan lugar para cambios o revisiones imprevistos. 4. Ventajas e inconvenientes del modelo en cascada. La ventaja es que es un modelo sencillo y f\u00e1cil de usar, y con una estructura sencilla en la que todo funci\u00f3n en orden por lo que facilita mucho su uso. La desventaja es que para los proyectos complejos no funciona porque no permite su divisi\u00f3n en fases ni tampoco los cambios ni revisiones. 5. \u00bfQu\u00e9 se entiende por verificaci\u00f3n?\u00bfY por validaci\u00f3n? Por verificaci\u00f3n se entiende que es comprobar o verificar algo, como el funcionamiento de un sistema o un proyecto. Por validaci\u00f3n es un proceso que revisa o v\u00e1lida el sistema para que cumpla con su funcionamiento y normas. 6. Explica como funciona el modelo de desarrollo mediante creaci\u00f3n de prototipos. Este modelo es utilizado principalmente para ofrecer al usuario una visi\u00f3n previa de c\u00f3mo ser\u00e1 el programa o sistema.","title":"Ejercios Unidad 1"},{"location":"Unidad_01/Ejercicio%20_Unidad%20_1/#ejercios-unidad-1","text":"","title":"Ejercios Unidad 1"},{"location":"Unidad_01/Ejercicio%20_Unidad%20_1/#ciclo-de-vida-del-sofware","text":"1. Define \"Ciclo de vida del sofware\" Es una secuencia estructurada y bien definida de las etapas en ingenier\u00eda de software para desarrollar el software deseado. 2. Nombra las fases principales del desarrollo de software y explica brevemente que se hace en cada una de ellas. AN\u00c1LISIS : determinar y definir las necesidades del cliente y especificar los requisitos que debe cumplir el software a desarrollar. DISE\u00d1O : descomponer y organizar el sistema en elementos por separados, y especificar la relaci\u00f3n y funci\u00f3n de los elementos. CODIFICACI\u00d3N : escribir el c\u00f3digo fuente de cada componente PRUEBAS : someter el programa a diferentes situaciones. MANTENIMIENTO : en casos de realizar cambios se rehace parte del trabajo en los pasos anteriores. 3. Explica brevemente en qu\u00e9 consiste el modelo en cascada cuando hablamos de desarrollo de sofware. Pues a la hora de gesti\u00f3n de proyectos se divide en fases ordenados. Y cada fase comienza reci\u00e9n cuando ha terminado la anterior. Este al ser un modelo antiguo no deja pr\u00e1cticamente ning\u00fan lugar para cambios o revisiones imprevistos. 4. Ventajas e inconvenientes del modelo en cascada. La ventaja es que es un modelo sencillo y f\u00e1cil de usar, y con una estructura sencilla en la que todo funci\u00f3n en orden por lo que facilita mucho su uso. La desventaja es que para los proyectos complejos no funciona porque no permite su divisi\u00f3n en fases ni tampoco los cambios ni revisiones. 5. \u00bfQu\u00e9 se entiende por verificaci\u00f3n?\u00bfY por validaci\u00f3n? Por verificaci\u00f3n se entiende que es comprobar o verificar algo, como el funcionamiento de un sistema o un proyecto. Por validaci\u00f3n es un proceso que revisa o v\u00e1lida el sistema para que cumpla con su funcionamiento y normas. 6. Explica como funciona el modelo de desarrollo mediante creaci\u00f3n de prototipos. Este modelo es utilizado principalmente para ofrecer al usuario una visi\u00f3n previa de c\u00f3mo ser\u00e1 el programa o sistema.","title":"Ciclo de vida del sofware"},{"location":"Unidad_01/Ejercicio_Unidad_1-2/","text":"Entorno Unidad 2 Entorno de desarrollo KANBAN, SCRUM y XP 1). KANBAN. Haz un resumen de la metodolog\u00eda Kanban e indica sus diferencias frente a SCRUM. Puedes consultar el siguiente enlace: \u00b7 https://es.atlassian.com/agile/kanban La metodolog\u00eda Kanban se implementa por medio de tableros Kanban, inventado por Toyota. Se trata de un m\u00e9todo visual de gesti\u00f3n de proyectos que permite a los equipos visualizar sus flujos de trabajo y la carga de trabajo. En un tablero Kanban, el trabajo se muestra en un proyecto en forma de tablero organizado por columnas. Tradicionalmente, cada columna representa una etapa del trabajo (Ej: Trabajo pendiente, En progreso y Terminado). Las metodolog\u00edas kanban son continuas y m\u00e1s fluidas, mientras que el scrum se basa en sprints de trabajo cortos y estructurados. 2). SCRUM. Explica como funciona Scrum. Consulta los siguientes enlaces: \u00b7 https://proyectosagiles.org/que-es-scrum/ \u00b7 https://proyectosagiles.org/como-funciona-scrum/ Scrum est\u00e1 estructurado para ayudar a los equipos a adaptarse de forma natural a las condiciones cambiantes y a los requisitos de los usuarios, con el cambio de prioridades integrado en el proceso y ciclos de lanzamiento breves para que tu equipo pueda aprender y mejorar constantemente. 3). SCRUM. Define los siguientes t\u00e9rminos: \u00b7 Product backlog: podr\u00eda definirse como un listado ordenado y priorizado de los requisitos necesarios para la implementaci\u00f3n de un proyecto. Debe contener descripciones de las funcionalidades y caracter\u00edsticas que se quieran en el producto, ordenadas en funci\u00f3n de su prioridad. \u00b7 Sprint backlog: es la suma de el Objetivo del Sprint, los elementos del Product Backlog elegidos para el Sprint, m\u00e1s un plan de acci\u00f3n de c\u00f3mo crear el Incremento de Producto 4). SCRUM. En la terminolog\u00eda Scrum qu\u00e9 terminos se utilizan como sin\u00f3nimo de: \u00b7 Jefe de proyecto = Scrum Master \u00b7 Cliente = Product Owner \u00b7 Equipo de desarrollo = Development Team 5). SCRUM. Haz un resumen de los requisitos para poder utilizar Scrum. Consulta el siguiente enlace: \u00b7 https://proyectosagiles.org/requisitos-de-scrum/ Cultura de empresa: trabajo en equipo, delegaci\u00f3n, creatividad y mejora continua. Compromiso de la Direcci\u00f3n: organizaci\u00f3n para resolver problemas y realizar cambios. Compromiso conjunto y colaboraci\u00f3n de los miembros del equipo. Relaci\u00f3n entre proveedor y cliente basada en ganar-ganar, colaboraci\u00f3n y transparencia. Facilidad para realizar cambios en el proyecto. Tama\u00f1o de cada equipo entre 5 y 9 personas. Equipo trabajando en un mismo espacio com\u00fan para maximizar la comunicaci\u00f3n. Dedicaci\u00f3n del equipo a tiempo completo. Estabilidad de los miembros del equipo 6). XP. Explica los 5 valores de la Programaci\u00f3n Extrema. Los 5 valores de eXtreme Programming: Comunicaci\u00f3n: objetivo de romper las cl\u00e1sicas barreras entre negocio y desarrollo. Promueve el trabajo mano a mano y no a trav\u00e9s de documentaci\u00f3n. Simplicidad: enfatiza mucho en poner el foco en codificar las necesidades de hoy. Feedback: comunicaci\u00f3n, y no solo con el cliente, sino en todas direcciones. Coraje: toma pr\u00e1cticas de sentido com\u00fan y las lleva al l\u00edmite, lo que muchas veces nos obliga a salir de nuestra zona de confort. Por ello, hay que ser valiente. Respeto: respeto por el trabajo de los dem\u00e1s y, sobre todo, respeto hacia uno mismo y tu trabajo. 7). XP. \u00bfCu\u00e1les son las caracter\u00edsticas distintivas de XP frente a otras metodolog\u00edas \u00e1giles? Expl\u00edcalas. Puedes consultar el siguiente enlace: \u00b7 http://www.davidvalverde.com/blog/introduccion-a-la-programacion-extrema-xp/ Al mismo tiempo que la metodolog\u00eda Agile recoge las buenas pr\u00e1cticas de un marco de trabajo espec\u00edfico. En ella, hay roles que se van repitiendo cada semana o 3-5 semanas. Pero se centra principalmente en la comunicaci\u00f3n con todos los involucrados en el proyectos, as\u00ed como la reutilizaci\u00f3n del c\u00f3digo ya desarrollado y la realimentaci\u00f3n.","title":"Unidad 1-2"},{"location":"Unidad_01/Ejercicio_Unidad_1-2/#entorno-de-desarrollo","text":"","title":"Entorno de desarrollo"},{"location":"Unidad_01/Ejercicio_Unidad_1-2/#kanban-scrum-y-xp","text":"1). KANBAN. Haz un resumen de la metodolog\u00eda Kanban e indica sus diferencias frente a SCRUM. Puedes consultar el siguiente enlace: \u00b7 https://es.atlassian.com/agile/kanban La metodolog\u00eda Kanban se implementa por medio de tableros Kanban, inventado por Toyota. Se trata de un m\u00e9todo visual de gesti\u00f3n de proyectos que permite a los equipos visualizar sus flujos de trabajo y la carga de trabajo. En un tablero Kanban, el trabajo se muestra en un proyecto en forma de tablero organizado por columnas. Tradicionalmente, cada columna representa una etapa del trabajo (Ej: Trabajo pendiente, En progreso y Terminado). Las metodolog\u00edas kanban son continuas y m\u00e1s fluidas, mientras que el scrum se basa en sprints de trabajo cortos y estructurados. 2). SCRUM. Explica como funciona Scrum. Consulta los siguientes enlaces: \u00b7 https://proyectosagiles.org/que-es-scrum/ \u00b7 https://proyectosagiles.org/como-funciona-scrum/ Scrum est\u00e1 estructurado para ayudar a los equipos a adaptarse de forma natural a las condiciones cambiantes y a los requisitos de los usuarios, con el cambio de prioridades integrado en el proceso y ciclos de lanzamiento breves para que tu equipo pueda aprender y mejorar constantemente. 3). SCRUM. Define los siguientes t\u00e9rminos: \u00b7 Product backlog: podr\u00eda definirse como un listado ordenado y priorizado de los requisitos necesarios para la implementaci\u00f3n de un proyecto. Debe contener descripciones de las funcionalidades y caracter\u00edsticas que se quieran en el producto, ordenadas en funci\u00f3n de su prioridad. \u00b7 Sprint backlog: es la suma de el Objetivo del Sprint, los elementos del Product Backlog elegidos para el Sprint, m\u00e1s un plan de acci\u00f3n de c\u00f3mo crear el Incremento de Producto 4). SCRUM. En la terminolog\u00eda Scrum qu\u00e9 terminos se utilizan como sin\u00f3nimo de: \u00b7 Jefe de proyecto = Scrum Master \u00b7 Cliente = Product Owner \u00b7 Equipo de desarrollo = Development Team 5). SCRUM. Haz un resumen de los requisitos para poder utilizar Scrum. Consulta el siguiente enlace: \u00b7 https://proyectosagiles.org/requisitos-de-scrum/ Cultura de empresa: trabajo en equipo, delegaci\u00f3n, creatividad y mejora continua. Compromiso de la Direcci\u00f3n: organizaci\u00f3n para resolver problemas y realizar cambios. Compromiso conjunto y colaboraci\u00f3n de los miembros del equipo. Relaci\u00f3n entre proveedor y cliente basada en ganar-ganar, colaboraci\u00f3n y transparencia. Facilidad para realizar cambios en el proyecto. Tama\u00f1o de cada equipo entre 5 y 9 personas. Equipo trabajando en un mismo espacio com\u00fan para maximizar la comunicaci\u00f3n. Dedicaci\u00f3n del equipo a tiempo completo. Estabilidad de los miembros del equipo 6). XP. Explica los 5 valores de la Programaci\u00f3n Extrema. Los 5 valores de eXtreme Programming: Comunicaci\u00f3n: objetivo de romper las cl\u00e1sicas barreras entre negocio y desarrollo. Promueve el trabajo mano a mano y no a trav\u00e9s de documentaci\u00f3n. Simplicidad: enfatiza mucho en poner el foco en codificar las necesidades de hoy. Feedback: comunicaci\u00f3n, y no solo con el cliente, sino en todas direcciones. Coraje: toma pr\u00e1cticas de sentido com\u00fan y las lleva al l\u00edmite, lo que muchas veces nos obliga a salir de nuestra zona de confort. Por ello, hay que ser valiente. Respeto: respeto por el trabajo de los dem\u00e1s y, sobre todo, respeto hacia uno mismo y tu trabajo. 7). XP. \u00bfCu\u00e1les son las caracter\u00edsticas distintivas de XP frente a otras metodolog\u00edas \u00e1giles? Expl\u00edcalas. Puedes consultar el siguiente enlace: \u00b7 http://www.davidvalverde.com/blog/introduccion-a-la-programacion-extrema-xp/ Al mismo tiempo que la metodolog\u00eda Agile recoge las buenas pr\u00e1cticas de un marco de trabajo espec\u00edfico. En ella, hay roles que se van repitiendo cada semana o 3-5 semanas. Pero se centra principalmente en la comunicaci\u00f3n con todos los involucrados en el proyectos, as\u00ed como la reutilizaci\u00f3n del c\u00f3digo ya desarrollado y la realimentaci\u00f3n.","title":"KANBAN, SCRUM y XP"},{"location":"Unidad_01/Ejercicio_Unidad_1-3/","text":"Entorno de desarrollo Lenguajes de programaci\u00f3n 1). \u00bfQu\u00e9 diferencia existe entre los lenguajes declarativos y los imperativos?. Nombra al menos 2 de cada tipo. Los lenguajes imperativos se especifica la secuencia de operaciones utilizado. Ejemplo: PHP, JavaScript. Mientras que los lenguajes declarativos se especifica el resultado deseado, no c\u00f3mo lograrlo. Ejemplo: SQL, Prolog. 2). \u00bfExplica qu\u00e9 es compilar? \u00bfExplica qu\u00e9 es interpretar? Compilar es el proceso de transformar un programa inform\u00e1tico escrito en un lenguaje en un programa equivalente en otro formato. Y interpretar es ejecutar el programa escrito a otro directamente, sin una previa compilaci\u00f3n del programa a instrucciones en lenguaje m\u00e1quina. 3). Ventajas de los lenguajes compilados. Un programa escrito en un lenguaje compilado posee la ventaja de no necesitar un programa anexo para ser ejecutado una vez que ha sido compilado. Adem\u00e1s, como s\u00f3lo es necesaria una traducci\u00f3n, la ejecuci\u00f3n se vuelve m\u00e1s r\u00e1pida. 4). Ventajas de los lenguajes interpretados. Multiplataforma. Puede estar en varios sistemas por lo que no tiene que adaptarse a una plataforma en concreto. Portabilidad. El programa puede llevarse a diferentes plataformas. Aumento del rendimiento. Algunos lenguajes interpretados, se ejecutan en el navegador cliente, lo que hace disminuir la carga de trabajo del servidor web. 5). Nombra 2 lenguajes compilados y otros 2 interpretados. Compilado: C, C++. Interpretado: PHP, JavaScript. 6). \u00bfPuede considerarse c\u00f3digo objeto el bytecode generado en Java tras la compilaci\u00f3n? Explica la respuesta. Si, porque el c\u00f3digo fuente Java se compila y se obtiene un c\u00f3digo binario intermedio denominado bytecode. Este puede considerarse c\u00f3digo objeto pero destinado a la m\u00e1quina virtual de Java en lugar de c\u00f3digo objeto nativo. 7). Pon un ejemplo de lenguaje de los siguientes tipos: Bajo nivel: ensamblador. Nivel medio: C. Alto nivel: Java. 8). \u00bfQu\u00e9 paradigma de programaci\u00f3n siguen los siguientes lenguajes? C --> imperativa, estructurado C++ --> imperativa, multiparadigma SQL --> declarativa, algebraico Java --> imperativa, orientado a objetos Javascript --> imperativa, multiparadigma Lisp --> declarativa, funcinale Prolog --> declarativa, l\u00f3gico Puedes consultar el siguiente enlace: https://es.wikipedia.org/wiki/Paradigma_de_programaci%C3%B3n 9). Explica qu\u00e9 criterios pueden seguirse a la hora de elegir un lenguade de programaci\u00f3n para el desarrollo software. Campo de aplicaci\u00f3n Experiencia previa Herramientas de desarrollo Documentaci\u00f3n disponible Base de usuarios Reusabilidad Transportabilidad Imposici\u00f3n del cliente","title":"Unidad 1-3"},{"location":"Unidad_01/Ejercicio_Unidad_1-3/#entorno-de-desarrollo","text":"","title":"Entorno de desarrollo"},{"location":"Unidad_01/Ejercicio_Unidad_1-3/#lenguajes-de-programacion","text":"1). \u00bfQu\u00e9 diferencia existe entre los lenguajes declarativos y los imperativos?. Nombra al menos 2 de cada tipo. Los lenguajes imperativos se especifica la secuencia de operaciones utilizado. Ejemplo: PHP, JavaScript. Mientras que los lenguajes declarativos se especifica el resultado deseado, no c\u00f3mo lograrlo. Ejemplo: SQL, Prolog. 2). \u00bfExplica qu\u00e9 es compilar? \u00bfExplica qu\u00e9 es interpretar? Compilar es el proceso de transformar un programa inform\u00e1tico escrito en un lenguaje en un programa equivalente en otro formato. Y interpretar es ejecutar el programa escrito a otro directamente, sin una previa compilaci\u00f3n del programa a instrucciones en lenguaje m\u00e1quina. 3). Ventajas de los lenguajes compilados. Un programa escrito en un lenguaje compilado posee la ventaja de no necesitar un programa anexo para ser ejecutado una vez que ha sido compilado. Adem\u00e1s, como s\u00f3lo es necesaria una traducci\u00f3n, la ejecuci\u00f3n se vuelve m\u00e1s r\u00e1pida. 4). Ventajas de los lenguajes interpretados. Multiplataforma. Puede estar en varios sistemas por lo que no tiene que adaptarse a una plataforma en concreto. Portabilidad. El programa puede llevarse a diferentes plataformas. Aumento del rendimiento. Algunos lenguajes interpretados, se ejecutan en el navegador cliente, lo que hace disminuir la carga de trabajo del servidor web. 5). Nombra 2 lenguajes compilados y otros 2 interpretados. Compilado: C, C++. Interpretado: PHP, JavaScript. 6). \u00bfPuede considerarse c\u00f3digo objeto el bytecode generado en Java tras la compilaci\u00f3n? Explica la respuesta. Si, porque el c\u00f3digo fuente Java se compila y se obtiene un c\u00f3digo binario intermedio denominado bytecode. Este puede considerarse c\u00f3digo objeto pero destinado a la m\u00e1quina virtual de Java en lugar de c\u00f3digo objeto nativo. 7). Pon un ejemplo de lenguaje de los siguientes tipos: Bajo nivel: ensamblador. Nivel medio: C. Alto nivel: Java. 8). \u00bfQu\u00e9 paradigma de programaci\u00f3n siguen los siguientes lenguajes? C --> imperativa, estructurado C++ --> imperativa, multiparadigma SQL --> declarativa, algebraico Java --> imperativa, orientado a objetos Javascript --> imperativa, multiparadigma Lisp --> declarativa, funcinale Prolog --> declarativa, l\u00f3gico Puedes consultar el siguiente enlace: https://es.wikipedia.org/wiki/Paradigma_de_programaci%C3%B3n 9). Explica qu\u00e9 criterios pueden seguirse a la hora de elegir un lenguade de programaci\u00f3n para el desarrollo software. Campo de aplicaci\u00f3n Experiencia previa Herramientas de desarrollo Documentaci\u00f3n disponible Base de usuarios Reusabilidad Transportabilidad Imposici\u00f3n del cliente","title":"Lenguajes de programaci\u00f3n"},{"location":"Unidad_02/Ejercicio_Unidad_2-1/","text":"Entorno de desarrollo Heramientas de desarrollo 1). Ejecuta el programa \"Hola mundo\" en los siguientes lenguajes: bash python php javascript (nodejs) C C++ java ruby go rust lisp ensamblador (nasm) Los paquetes a instalar en Ubuntu son: python , php , nodejs , gcc , g++ , openjdk-8-jdk , ruby , golang , rustc , clisp y nasm . El c\u00f3digo fuente para distintos lenguajes de programaci\u00f3n est\u00e1 disponible en: https://es.wikipedia.org/wiki/Anexo:Ejemplos_de_implementaci%C3%B3n_del_%C2%ABHola_mundo%C2%BB Instrucciones en https://github.com/jamj2000/DAW1-ED-HolaMundo. 2). Para cada uno de los lenguajes anteriores, indica el proceso realizado para conseguir ejecutar el c\u00f3digo: \u00bfcompilaci\u00f3n o interpretaci\u00f3n? bash ---> interpretaci\u00f3n python ---> interpretaci\u00f3n php ---> interpretaci\u00f3n javascript (nodejs) ---> interpretaci\u00f3n C ---> compilaci\u00f3n C++ ---> compilaci\u00f3n java ---> compilaci\u00f3n ruby ---> interpretaci\u00f3n go ---> compilaci\u00f3n rust ---> compilaci\u00f3n lisp ---> interpretaci\u00f3n ensamblador (nasm) ---> compilador cruzado 3). Para cada uno de los lenguajes anteriores, indica el nombre del compilador o interprete utilizado en GNU/Linux. bash ---> SCRIPTS python ---> CPYTHON php ---> NETBEANS javascript (nodejs) ---> GCC C ---> GCC C++ ---> GCC java ---> JAVAC ruby ---> compilador JIT go ---> GO BUILD rust ---> RUSTC lisp ---> CAR/ CDR ensamblador (nasm) ---> GCC 4). Investiga y averigua que extensi\u00f3n tienen los archivos de c\u00f3digo fuente de los siguientes lenguajes: bash = .sh python = .py php = .php javascript = .js C = .c C++ = .cpp java = .java ensamblador (nasm) = .asm ruby = .rb go = .go rust = .rs lisp= .lisp 5). Scripts ejecutables para los lenguajes interpretados. Edita los scripts para los siguientes lenguajes: bash python php javascript java ruby go rust lisp Instrucciones en https://github.com/jamj2000/DAW1-ED-HolaMundo. 6). \u00bfQu\u00e9 extensi\u00f3n tienen los archivos de c\u00f3digo objeto? Los archivo la de c\u00f3digo objeto tiene extensi\u00f3n .obj . 7). Lenguaje C. C\u00f3digo en varios archivos. Obtener el c\u00f3digo objeto a partir del c\u00f3digo fuente de los 3 archivos siguientes: //------------- // datos.c //------------- char *mensaje=\"Hola a todos y todas\"; int num1 = 8; int num2 = 10; //------------- // suma.c //------------- int suma (int a, int b) { return a + b; } //------------- // main.c //------------- /#include <stdio.h> int suma (int a, int b); extern char *mensaje; extern int num1, num2; int main(){ printf(\"%s\\n\", mensaje); printf(\"%d\\n\", suma (num1, num2) ); return 0; } # Para obtener c\u00f3digo objeto gcc -c main.c datos.c suma.c Deberemos obtener 3 archivos: main.o , suma.o y datos.o 8). Lenguaje C. C\u00f3digo en varios archivos. Obtener el c\u00f3digo binario ejecutable a partir del c\u00f3digo objeto de los 3 archivos anteriores: # Para obtener c\u00f3digo binario gcc -o programa main.o datos.o suma.o Deberememos obtener un archivo programa binario ejecutable. Si lo ejecutamos obtenemos el siguiente resultado: ./programa Hola a todos y todas 18 Bibliotecas 11). Bibliotecas. Define que se entiende por biblioteca o librer\u00eda y los tipos que existen. En este sentido, una biblioteca o librer\u00eda es un conjunto de archivos que se utiliza para desarrollar software. Suele estar compuesta de c\u00f3digo y datos, y su fin es ser utilizada por otros programas de forma totalmente aut\u00f3noma. - Biblioteca est\u00e1tica. - Bibliotecas din\u00e1mica. 12). Bibliotecas. \u00bfQu\u00e9 tipo es el m\u00e1s utilizado actualmente? \u00bfPor qu\u00e9? La m\u00e1s utilizada son las bibliotecas din\u00e1micas (.DLL o .so) (.jar en Java). Ejemplos de librer\u00edas m\u00e1s usados: JavaScript, C++ y Python. Porque facilitan la gesti\u00f3n y aprovechamiento de la memoria del sistema. Permite al sistema operativo aplicar algoritmos que mejoren el rendimiento del sistema cuando se carguen estas bibliotecas. Adem\u00e1s, al estar compartidas, basta con mantener una copia en memoria para todos los programas que la utilicen. M\u00e1s informaci\u00f3n en https://github.com/jamj2000/DAW1-ED-Bibliotecas 13). Bibliotecas. Crea una biblioteca din\u00e1mica en C que proporcione las funciones para sumar, restar, multiplicar y dividir 2 n\u00fameros enteros. Crea un programa que haga uso de ella y comprueba que se ejecuta correctamente. Instrucciones en https://github.com/jamj2000/DAW1-ED-Bibliotecas 14). Bibliotecas. Crea una biblioteca din\u00e1mica en Java que proporcione las funciones para sumar, restar, multiplicar y dividir 2 n\u00fameros enteros. Crea un programa que haga uso de ella y comprueba que se ejecuta correctamente. Instrucciones en https://github.com/jamj2000/DAW1-ED-Bibliotecas 15). Bibliotecas. Busca informaci\u00f3n y explica las ventajas y desventajas de usar bibliotecas est\u00e1ticas. Ventaja : - No es necesario proporcionar las bibliotecas correspondientes al publicar el programa. - Biblioteca de carga r\u00e1pida. Desventaja : - La biblioteca est\u00e1 empaquetada en la aplicaci\u00f3n, lo que resulta en una gran biblioteca. - La biblioteca ha cambiado y es necesario volver a compilar el programa. 16). Bibliotecas. Busca informaci\u00f3n y explica las ventajas y desventajas de usar bibliotecas din\u00e1micas. Ventajas : 1. La programaci\u00f3n se centra completamente en la esencia del dise\u00f1o del programa, se mejora la simplicidad del c\u00f3digo y la eficiencia del desarrollo. 2. Debido a que la escala del programa se reduce, la inteligibilidad del programa tambi\u00e9n se mejora. Desventajas : 1. La velocidad de ejecuci\u00f3n del programa es lenta debido al lenguaje de tipo din\u00e1mico, la verificaci\u00f3n de tipo se realiza en tiempo de ejecuci\u00f3n. 2. No se pueden detectar errores sin ejecuci\u00f3n. Buildfile 17). Build. Automatiza el proceso de compilaci\u00f3n de ejecutable y biblioteca, su enlazado y la generaci\u00f3n del archivo ejecutable para c\u00f3digo fuente en C con make. Haz uso de un buildfile. Instrucciones en https://github.com/jamj2000/DAW1-ED-Bibliotecas/blob/master/Build.md 18). Build. Automatiza el proceso de compilaci\u00f3n de ejecutable y biblioteca, su enlazado y la generaci\u00f3n del archivo .jar para c\u00f3digo fuente en Java con Ant. Haz uso de un buildfile. Instrucciones en https://github.com/jamj2000/DAW1-ED-Bibliotecas/blob/master/Build.md 19). Build. Automatiza el proceso de compilaci\u00f3n de ejecutable y biblioteca, su enlazado y la generaci\u00f3n del archivo .jar para c\u00f3digo fuente en Java con Maven. Haz uso de un buildfile. Instrucciones en https://github.com/jamj2000/DAW1-ED-Bibliotecas/blob/master/Maven.md 20). Build. Automatiza el proceso de compilaci\u00f3n de ejecutable y biblioteca, su enlazado y la generaci\u00f3n del archivo .jar para c\u00f3digo fuente en Java con Gradle. Haz uso de un buildfile. Instrucciones en https://github.com/jamj2000/DAW1-ED-Bibliotecas/blob/master/Gradle.md","title":"Unidad 2-1"},{"location":"Unidad_02/Ejercicio_Unidad_2-1/#entorno-de-desarrollo","text":"","title":"Entorno de desarrollo"},{"location":"Unidad_02/Ejercicio_Unidad_2-1/#heramientas-de-desarrollo","text":"1). Ejecuta el programa \"Hola mundo\" en los siguientes lenguajes: bash python php javascript (nodejs) C C++ java ruby go rust lisp ensamblador (nasm) Los paquetes a instalar en Ubuntu son: python , php , nodejs , gcc , g++ , openjdk-8-jdk , ruby , golang , rustc , clisp y nasm . El c\u00f3digo fuente para distintos lenguajes de programaci\u00f3n est\u00e1 disponible en: https://es.wikipedia.org/wiki/Anexo:Ejemplos_de_implementaci%C3%B3n_del_%C2%ABHola_mundo%C2%BB Instrucciones en https://github.com/jamj2000/DAW1-ED-HolaMundo. 2). Para cada uno de los lenguajes anteriores, indica el proceso realizado para conseguir ejecutar el c\u00f3digo: \u00bfcompilaci\u00f3n o interpretaci\u00f3n? bash ---> interpretaci\u00f3n python ---> interpretaci\u00f3n php ---> interpretaci\u00f3n javascript (nodejs) ---> interpretaci\u00f3n C ---> compilaci\u00f3n C++ ---> compilaci\u00f3n java ---> compilaci\u00f3n ruby ---> interpretaci\u00f3n go ---> compilaci\u00f3n rust ---> compilaci\u00f3n lisp ---> interpretaci\u00f3n ensamblador (nasm) ---> compilador cruzado 3). Para cada uno de los lenguajes anteriores, indica el nombre del compilador o interprete utilizado en GNU/Linux. bash ---> SCRIPTS python ---> CPYTHON php ---> NETBEANS javascript (nodejs) ---> GCC C ---> GCC C++ ---> GCC java ---> JAVAC ruby ---> compilador JIT go ---> GO BUILD rust ---> RUSTC lisp ---> CAR/ CDR ensamblador (nasm) ---> GCC 4). Investiga y averigua que extensi\u00f3n tienen los archivos de c\u00f3digo fuente de los siguientes lenguajes: bash = .sh python = .py php = .php javascript = .js C = .c C++ = .cpp java = .java ensamblador (nasm) = .asm ruby = .rb go = .go rust = .rs lisp= .lisp 5). Scripts ejecutables para los lenguajes interpretados. Edita los scripts para los siguientes lenguajes: bash python php javascript java ruby go rust lisp Instrucciones en https://github.com/jamj2000/DAW1-ED-HolaMundo. 6). \u00bfQu\u00e9 extensi\u00f3n tienen los archivos de c\u00f3digo objeto? Los archivo la de c\u00f3digo objeto tiene extensi\u00f3n .obj . 7). Lenguaje C. C\u00f3digo en varios archivos. Obtener el c\u00f3digo objeto a partir del c\u00f3digo fuente de los 3 archivos siguientes: //------------- // datos.c //------------- char *mensaje=\"Hola a todos y todas\"; int num1 = 8; int num2 = 10; //------------- // suma.c //------------- int suma (int a, int b) { return a + b; } //------------- // main.c //------------- /#include <stdio.h> int suma (int a, int b); extern char *mensaje; extern int num1, num2; int main(){ printf(\"%s\\n\", mensaje); printf(\"%d\\n\", suma (num1, num2) ); return 0; } # Para obtener c\u00f3digo objeto gcc -c main.c datos.c suma.c Deberemos obtener 3 archivos: main.o , suma.o y datos.o 8). Lenguaje C. C\u00f3digo en varios archivos. Obtener el c\u00f3digo binario ejecutable a partir del c\u00f3digo objeto de los 3 archivos anteriores: # Para obtener c\u00f3digo binario gcc -o programa main.o datos.o suma.o Deberememos obtener un archivo programa binario ejecutable. Si lo ejecutamos obtenemos el siguiente resultado: ./programa Hola a todos y todas 18","title":"Heramientas de desarrollo"},{"location":"Unidad_02/Ejercicio_Unidad_2-1/#bibliotecas","text":"11). Bibliotecas. Define que se entiende por biblioteca o librer\u00eda y los tipos que existen. En este sentido, una biblioteca o librer\u00eda es un conjunto de archivos que se utiliza para desarrollar software. Suele estar compuesta de c\u00f3digo y datos, y su fin es ser utilizada por otros programas de forma totalmente aut\u00f3noma. - Biblioteca est\u00e1tica. - Bibliotecas din\u00e1mica. 12). Bibliotecas. \u00bfQu\u00e9 tipo es el m\u00e1s utilizado actualmente? \u00bfPor qu\u00e9? La m\u00e1s utilizada son las bibliotecas din\u00e1micas (.DLL o .so) (.jar en Java). Ejemplos de librer\u00edas m\u00e1s usados: JavaScript, C++ y Python. Porque facilitan la gesti\u00f3n y aprovechamiento de la memoria del sistema. Permite al sistema operativo aplicar algoritmos que mejoren el rendimiento del sistema cuando se carguen estas bibliotecas. Adem\u00e1s, al estar compartidas, basta con mantener una copia en memoria para todos los programas que la utilicen. M\u00e1s informaci\u00f3n en https://github.com/jamj2000/DAW1-ED-Bibliotecas 13). Bibliotecas. Crea una biblioteca din\u00e1mica en C que proporcione las funciones para sumar, restar, multiplicar y dividir 2 n\u00fameros enteros. Crea un programa que haga uso de ella y comprueba que se ejecuta correctamente. Instrucciones en https://github.com/jamj2000/DAW1-ED-Bibliotecas 14). Bibliotecas. Crea una biblioteca din\u00e1mica en Java que proporcione las funciones para sumar, restar, multiplicar y dividir 2 n\u00fameros enteros. Crea un programa que haga uso de ella y comprueba que se ejecuta correctamente. Instrucciones en https://github.com/jamj2000/DAW1-ED-Bibliotecas 15). Bibliotecas. Busca informaci\u00f3n y explica las ventajas y desventajas de usar bibliotecas est\u00e1ticas. Ventaja : - No es necesario proporcionar las bibliotecas correspondientes al publicar el programa. - Biblioteca de carga r\u00e1pida. Desventaja : - La biblioteca est\u00e1 empaquetada en la aplicaci\u00f3n, lo que resulta en una gran biblioteca. - La biblioteca ha cambiado y es necesario volver a compilar el programa. 16). Bibliotecas. Busca informaci\u00f3n y explica las ventajas y desventajas de usar bibliotecas din\u00e1micas. Ventajas : 1. La programaci\u00f3n se centra completamente en la esencia del dise\u00f1o del programa, se mejora la simplicidad del c\u00f3digo y la eficiencia del desarrollo. 2. Debido a que la escala del programa se reduce, la inteligibilidad del programa tambi\u00e9n se mejora. Desventajas : 1. La velocidad de ejecuci\u00f3n del programa es lenta debido al lenguaje de tipo din\u00e1mico, la verificaci\u00f3n de tipo se realiza en tiempo de ejecuci\u00f3n. 2. No se pueden detectar errores sin ejecuci\u00f3n.","title":"Bibliotecas"},{"location":"Unidad_02/Ejercicio_Unidad_2-1/#buildfile","text":"17). Build. Automatiza el proceso de compilaci\u00f3n de ejecutable y biblioteca, su enlazado y la generaci\u00f3n del archivo ejecutable para c\u00f3digo fuente en C con make. Haz uso de un buildfile. Instrucciones en https://github.com/jamj2000/DAW1-ED-Bibliotecas/blob/master/Build.md 18). Build. Automatiza el proceso de compilaci\u00f3n de ejecutable y biblioteca, su enlazado y la generaci\u00f3n del archivo .jar para c\u00f3digo fuente en Java con Ant. Haz uso de un buildfile. Instrucciones en https://github.com/jamj2000/DAW1-ED-Bibliotecas/blob/master/Build.md 19). Build. Automatiza el proceso de compilaci\u00f3n de ejecutable y biblioteca, su enlazado y la generaci\u00f3n del archivo .jar para c\u00f3digo fuente en Java con Maven. Haz uso de un buildfile. Instrucciones en https://github.com/jamj2000/DAW1-ED-Bibliotecas/blob/master/Maven.md 20). Build. Automatiza el proceso de compilaci\u00f3n de ejecutable y biblioteca, su enlazado y la generaci\u00f3n del archivo .jar para c\u00f3digo fuente en Java con Gradle. Haz uso de un buildfile. Instrucciones en https://github.com/jamj2000/DAW1-ED-Bibliotecas/blob/master/Gradle.md","title":"Buildfile"},{"location":"Unidad_02/Ejercicios_Unidad_2-2/","text":"Entorno de desarrollo Entornos integrados de desarrollo 1.- Instala el editor sublime text. Saca una captura de pantalla una vez instalado. 2.- Personaliza Sublime text instalando los complementos m\u00e1s importantes. Consulta la p\u00e1gina https://www.genbetadev.com/desarrollo-web/10-packages-de-sublimetext-para-desarrolladores-web Emmet SideBarEnhancements HTML-CSS-JS Prettify Color Highlighter BracketHighlighter HTML5 Terminal JavaScriptNext ES6 PackageDev 3.- \u00bfPara que sirve el complemento Emmet ? Haz uso de \u00e9l al escribir un archivo html de prueba. Emmet es un plugin que se puede incorporar en muchos editores de texto, como Sublime Text, Brackets, Eclipse, Netbeans. Permite que la parte mec\u00e1nica de la programaci\u00f3n, que es escribir los tags o palabras reservadas suponga mucho menos esfuerzo y tiempo. Archivo: prueba.html <!DOCTYPE html> <html> <head> <meta charset=\"utf-8\"> <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"> <title>Prueba de Subline Text</title> <link rel=\"shortcut icon\" href=\"nieve.jpg\"> </head> <body> <h1>Subline Text con HTML</h1> <p>Lorem ipsum dolor sit, amet consectetur adipisicing, elit. Modi, animi!</p> <h2>Apartado 1</h2> <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Autem pariatur voluptates quasi rerum, vitae, tempore omnis exercitationem cupiditate animi, velit ullam doloremque quos minima.</p> <h2>Apartado 2</h2> <p>Lorem ipsum dolor sit amet consectetur adipisicing, elit. Et deserunt perferendis ad iure eaque iusto, at eius sapiente exercitationem doloribus atque quibusdam quod, corporis facere culpa, accusantium delectus odit, explicabo!</p> <h3>Ejemplo de editores de texto.</h3> <ul> <li><a href=\"https://es.wikipedia.org/wiki/Sublime_Text\">Subline text</a></li> <li><a href=\"https://es.wikipedia.org/wiki/NetBeans\">Netbeans</a></li> <li><a href=\"https://en.wikipedia.org/wiki/Brackets_(text_editor)\">Blackets(ingles)</a></li> <li><a href=\"https://es.wikipedia.org/wiki/Eclipse_(software)\">Eclipse</a></li> </ul> <h4>Imagen del medio ambinente.</h4> <img src=\"arbol.jpg\" alt=\"Naturaleza del arbol\" width=\"445\" height=\"345\"> </body> </html> 4.- Instala el editor Visual Studio Code. Saca una captura de pantalla una vez instalado y funcionando. 5.- Haz una comparativa de la funcionalidad ofrecida por Sublime text y la ofrecida por Visual Studio Code referente a los siguientes aspectos: Terminal integrado: En Visual Studio Code, ya tiene incorporado un terminal, est\u00e1 se puede cambiar el tama\u00f1o de la terminal y dividir las vistas para tener una o varias terminales visibles al mismo tiempo. En cambio, en Sublime no tiene soporte para terminal incorporado. Para tener un terminal, el editor sublime tiene un paquete de Terminal que debe instalarse para ejecutar la l\u00ednea de comando. Emmet incorporado: En Visual Studio, Emmet tiene un autocompletado de HTML, adem\u00e1s puede usarse para generar etiquetas a medida que las vamos escribiendo o para formatear texto ya existente. Tambi\u00e9n vale para CSS . En Sublime text hay que instalar el Emmet en el sitio web y tambi\u00e9n funciona tanto para HTML y CSS. Iconos para los tipos de archivos: En Visual Studio se usan iconos de estilo moderno, con l\u00edneas geom\u00e9tricas limpias, un equilibrio de 50/50 de positivo/negativo (claro/oscuro) y con met\u00e1foras directas y comprensibles. Sin embargo, en Sublime text se tiene que descargar el paquete para los iconos. Despu\u00e9s de instalar el paquete, autom\u00e1ticamente puede ver en el sidebar los iconos de los archivos que cambian seg\u00fan el formato o tipo de archivo que le corresponde. Atajo de teclas para comentar (Ctrl+Shift+7): En Visual Studio Code: primero pulsa [CTRL] + K (Vscode queda a la espera), despu\u00e9s pulsa [CTRL] + C para comentar y [CTRL] + U para descomentar. En Sublime text: para comentar/descomentar c\u00f3digo de forma r\u00e1pida podemos configurar la combinaci\u00f3n de teclas CTRL+ 7. Atajo de teclas para buscar y seleccionar (Ctrl+D): En Visual Studio Code --> Ctrl + D: una vez abierto el cuadro de b\u00fasqueda, se selecciona un determinado fragmento de c\u00f3digo y se a\u00f1ade autom\u00e1ticamente a la b\u00fasqueda, de forma que se identifiquen todas las coincidencias de dicho c\u00f3digo. En Sublime text --> Ctrl + D (para seleccionar) y Ctrl + F (para encontrar). 6.- \u00bfQu\u00e9 paquetes b\u00e1sicos debemos instalar en Ubuntu para desarrollar en Java? Se instala Open JDK: $ sudo apt-get install openjdk-8-jdk Y se instala Geany: $ sudo apt-get install geany $ sudo apt-get install geany-plugins 7.- Instala el entorno integrado Netbeans. Saca una captura de pantalla una vez instalado y funcionando. 8.- Instala el entorno integrado Eclipse. Saca una captura de pantalla una vez instalado y funcionando. 9.- Crea un proyecto en Java en Netbeans. Realiza su compilaci\u00f3n y ejecuci\u00f3n. 10.- \u00bfQu\u00e9 sistema de construcci\u00f3n utiliza Netbeans para generar los archivos \"ejecutables\"? Mira en el directorio ra\u00edz del proyecto y examina qu\u00e9 buildfile utiliza de los vistos en el tema. Usa los sistemas de Java y HTML.","title":"Unidad 2-2"},{"location":"Unidad_02/Ejercicios_Unidad_2-2/#entorno-de-desarrollo","text":"","title":"Entorno de desarrollo"},{"location":"Unidad_02/Ejercicios_Unidad_2-2/#entornos-integrados-de-desarrollo","text":"1.- Instala el editor sublime text. Saca una captura de pantalla una vez instalado. 2.- Personaliza Sublime text instalando los complementos m\u00e1s importantes. Consulta la p\u00e1gina https://www.genbetadev.com/desarrollo-web/10-packages-de-sublimetext-para-desarrolladores-web Emmet SideBarEnhancements HTML-CSS-JS Prettify Color Highlighter BracketHighlighter HTML5 Terminal JavaScriptNext ES6 PackageDev 3.- \u00bfPara que sirve el complemento Emmet ? Haz uso de \u00e9l al escribir un archivo html de prueba. Emmet es un plugin que se puede incorporar en muchos editores de texto, como Sublime Text, Brackets, Eclipse, Netbeans. Permite que la parte mec\u00e1nica de la programaci\u00f3n, que es escribir los tags o palabras reservadas suponga mucho menos esfuerzo y tiempo. Archivo: prueba.html <!DOCTYPE html> <html> <head> <meta charset=\"utf-8\"> <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"> <title>Prueba de Subline Text</title> <link rel=\"shortcut icon\" href=\"nieve.jpg\"> </head> <body> <h1>Subline Text con HTML</h1> <p>Lorem ipsum dolor sit, amet consectetur adipisicing, elit. Modi, animi!</p> <h2>Apartado 1</h2> <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Autem pariatur voluptates quasi rerum, vitae, tempore omnis exercitationem cupiditate animi, velit ullam doloremque quos minima.</p> <h2>Apartado 2</h2> <p>Lorem ipsum dolor sit amet consectetur adipisicing, elit. Et deserunt perferendis ad iure eaque iusto, at eius sapiente exercitationem doloribus atque quibusdam quod, corporis facere culpa, accusantium delectus odit, explicabo!</p> <h3>Ejemplo de editores de texto.</h3> <ul> <li><a href=\"https://es.wikipedia.org/wiki/Sublime_Text\">Subline text</a></li> <li><a href=\"https://es.wikipedia.org/wiki/NetBeans\">Netbeans</a></li> <li><a href=\"https://en.wikipedia.org/wiki/Brackets_(text_editor)\">Blackets(ingles)</a></li> <li><a href=\"https://es.wikipedia.org/wiki/Eclipse_(software)\">Eclipse</a></li> </ul> <h4>Imagen del medio ambinente.</h4> <img src=\"arbol.jpg\" alt=\"Naturaleza del arbol\" width=\"445\" height=\"345\"> </body> </html> 4.- Instala el editor Visual Studio Code. Saca una captura de pantalla una vez instalado y funcionando. 5.- Haz una comparativa de la funcionalidad ofrecida por Sublime text y la ofrecida por Visual Studio Code referente a los siguientes aspectos: Terminal integrado: En Visual Studio Code, ya tiene incorporado un terminal, est\u00e1 se puede cambiar el tama\u00f1o de la terminal y dividir las vistas para tener una o varias terminales visibles al mismo tiempo. En cambio, en Sublime no tiene soporte para terminal incorporado. Para tener un terminal, el editor sublime tiene un paquete de Terminal que debe instalarse para ejecutar la l\u00ednea de comando. Emmet incorporado: En Visual Studio, Emmet tiene un autocompletado de HTML, adem\u00e1s puede usarse para generar etiquetas a medida que las vamos escribiendo o para formatear texto ya existente. Tambi\u00e9n vale para CSS . En Sublime text hay que instalar el Emmet en el sitio web y tambi\u00e9n funciona tanto para HTML y CSS. Iconos para los tipos de archivos: En Visual Studio se usan iconos de estilo moderno, con l\u00edneas geom\u00e9tricas limpias, un equilibrio de 50/50 de positivo/negativo (claro/oscuro) y con met\u00e1foras directas y comprensibles. Sin embargo, en Sublime text se tiene que descargar el paquete para los iconos. Despu\u00e9s de instalar el paquete, autom\u00e1ticamente puede ver en el sidebar los iconos de los archivos que cambian seg\u00fan el formato o tipo de archivo que le corresponde. Atajo de teclas para comentar (Ctrl+Shift+7): En Visual Studio Code: primero pulsa [CTRL] + K (Vscode queda a la espera), despu\u00e9s pulsa [CTRL] + C para comentar y [CTRL] + U para descomentar. En Sublime text: para comentar/descomentar c\u00f3digo de forma r\u00e1pida podemos configurar la combinaci\u00f3n de teclas CTRL+ 7. Atajo de teclas para buscar y seleccionar (Ctrl+D): En Visual Studio Code --> Ctrl + D: una vez abierto el cuadro de b\u00fasqueda, se selecciona un determinado fragmento de c\u00f3digo y se a\u00f1ade autom\u00e1ticamente a la b\u00fasqueda, de forma que se identifiquen todas las coincidencias de dicho c\u00f3digo. En Sublime text --> Ctrl + D (para seleccionar) y Ctrl + F (para encontrar). 6.- \u00bfQu\u00e9 paquetes b\u00e1sicos debemos instalar en Ubuntu para desarrollar en Java? Se instala Open JDK: $ sudo apt-get install openjdk-8-jdk Y se instala Geany: $ sudo apt-get install geany $ sudo apt-get install geany-plugins 7.- Instala el entorno integrado Netbeans. Saca una captura de pantalla una vez instalado y funcionando. 8.- Instala el entorno integrado Eclipse. Saca una captura de pantalla una vez instalado y funcionando. 9.- Crea un proyecto en Java en Netbeans. Realiza su compilaci\u00f3n y ejecuci\u00f3n. 10.- \u00bfQu\u00e9 sistema de construcci\u00f3n utiliza Netbeans para generar los archivos \"ejecutables\"? Mira en el directorio ra\u00edz del proyecto y examina qu\u00e9 buildfile utiliza de los vistos en el tema. Usa los sistemas de Java y HTML.","title":"Entornos integrados de desarrollo"}]}